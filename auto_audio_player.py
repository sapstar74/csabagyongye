"""
üéµ Automatikus Audio Lej√°tsz√≥ Komponens
Automatikusan elind√≠tja az audio lej√°tsz√°st a k√©rd√©sek megjelen√©sekor
"""

import streamlit as st
import streamlit.components.v1 as components
import os
from pathlib import Path

def auto_audio_player(audio_file_path, audio_filename=None):
    """
    Automatikus audio lej√°tsz√≥ komponens
    
    Args:
        audio_file_path (str): Az audio f√°jl el√©r√©si √∫tja
        audio_filename (str, optional): Az audio f√°jl neve megjelen√≠t√©shez
    """
    
    if not audio_file_path or not os.path.exists(audio_file_path):
        st.warning("‚ö†Ô∏è Audio f√°jl nem tal√°lhat√≥")
        return
    
    # Audio f√°jln√©v kinyer√©se, ha nincs megadva
    if audio_filename is None:
        audio_filename = os.path.basename(audio_file_path)
    
    # Audio f√°jl beolvas√°sa
    with open(audio_file_path, "rb") as f:
        audio_bytes = f.read()
    
    # Audio f√°jln√©v megjelen√≠t√©se
    st.markdown(f"### üéµ Hallgasd meg a zen√©t: **{audio_filename}**")
    
    # HTML √©s JavaScript az automatikus lej√°tsz√°shoz
    html_code = f"""
    <div style="margin: 10px 0;">
        <audio id="autoAudio" controls autoplay style="width: 100%;">
            <source src="data:audio/mp3;base64,{audio_bytes.hex()}" type="audio/mp3">
            A b√∂ng√©sz≈ëd nem t√°mogatja az audio lej√°tsz√°st.
        </audio>
    </div>
    
    <script>
    (function() {{
        // V√°runk, am√≠g az oldal bet√∂lt≈ëdik
        function initAutoPlay() {{
            const audioElement = document.getElementById('autoAudio');
            if (audioElement) {{
                // Automatikus lej√°tsz√°s ind√≠t√°sa
                audioElement.play().catch(function(error) {{
                    console.log('Automatikus lej√°tsz√°s nem siker√ºlt:', error);
                    // Felhaszn√°l√≥i interakci√≥ sz√ºks√©ges lehet
                    console.log('K√©rj√ºk, kattints az audio lej√°tsz√°s gombra');
                }});
                
                // Hanger≈ë be√°ll√≠t√°sa (50%)
                audioElement.volume = 0.5;
                
                // Esem√©nykezel≈ëk
                audioElement.addEventListener('play', function() {{
                    console.log('Audio lej√°tsz√°s elindult');
                }});
                
                audioElement.addEventListener('error', function(e) {{
                    console.log('Audio lej√°tsz√°si hiba:', e);
                }});
            }}
        }}
        
        // T√∂bb pr√≥b√°lkoz√°s az automatikus lej√°tsz√°shoz
        if (document.readyState === 'loading') {{
            document.addEventListener('DOMContentLoaded', initAutoPlay);
        }} else {{
            initAutoPlay();
        }}
        
        // K√©sleltetett pr√≥b√°lkoz√°s is
        setTimeout(initAutoPlay, 500);
        setTimeout(initAutoPlay, 1000);
        setTimeout(initAutoPlay, 2000);
    }})();
    </script>
    """
    
    # Komponens megjelen√≠t√©se
    components.html(html_code, height=100)
    
    # Fallback: Streamlit audio komponens
    st.markdown("**Vagy haszn√°ld ezt a lej√°tsz√≥t:**")
    st.audio(audio_bytes, format="audio/mp3")

def auto_audio_player_simple(audio_file_path, audio_filename=None):
    """
    Egyszer≈± automatikus audio lej√°tsz√≥ Streamlit audio komponenssel
    
    Args:
        audio_file_path (str): Az audio f√°jl el√©r√©si √∫tja
        audio_filename (str, optional): Az audio f√°jl neve megjelen√≠t√©shez
    """
    
    if not audio_file_path or not os.path.exists(audio_file_path):
        st.warning("‚ö†Ô∏è Audio f√°jl nem tal√°lhat√≥")
        return
    
    # Audio f√°jln√©v kinyer√©se, ha nincs megadva
    if audio_filename is None:
        audio_filename = os.path.basename(audio_file_path)
    
    # Audio f√°jln√©v megjelen√≠t√©se
    st.markdown(f"### üéµ Hallgasd meg a zen√©t: **{audio_filename}**")
    
    # Audio f√°jl beolvas√°sa √©s lej√°tsz√°s
    with open(audio_file_path, "rb") as f:
        audio_bytes = f.read()
    
    # Streamlit audio komponens automatikus ind√≠t√°ssal
    st.audio(audio_bytes, format="audio/mp3")
    
    # JavaScript az automatikus lej√°tsz√°shoz
    st.markdown("""
    <script>
    // V√°runk, am√≠g az oldal bet√∂lt≈ëdik
    document.addEventListener('DOMContentLoaded', function() {
        // Megkeress√ºk az audio elemet
        const audioElement = document.querySelector('audio');
        if (audioElement) {
            // Automatikus lej√°tsz√°s ind√≠t√°sa
            audioElement.play().catch(function(error) {
                console.log('Automatikus lej√°tsz√°s nem siker√ºlt:', error);
            });
            
            // Hanger≈ë be√°ll√≠t√°sa (50%)
            audioElement.volume = 0.5;
        }
    });
    
    // Alternat√≠v megold√°sok k√ºl√∂nb√∂z≈ë id≈ëz√≠t√©sekkel
    setTimeout(function() {
        const audioElement = document.querySelector('audio');
        if (audioElement) {
            audioElement.play().catch(function(error) {
                console.log('Automatikus lej√°tsz√°s nem siker√ºlt (1s):', error);
            });
            audioElement.volume = 0.5;
        }
    }, 1000);
    
    setTimeout(function() {
        const audioElement = document.querySelector('audio');
        if (audioElement) {
            audioElement.play().catch(function(error) {
                console.log('Automatikus lej√°tsz√°s nem siker√ºlt (2s):', error);
            });
            audioElement.volume = 0.5;
        }
    }, 2000);
    </script>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    # Test the component
    st.title("üéµ Automatikus Audio Lej√°tsz√≥ Teszt")
    
    # Teszt audio f√°jl
    test_audio_path = "audio_files/1_Ariana_Grande.mp3"
    
    if os.path.exists(test_audio_path):
        st.success("‚úÖ Teszt audio f√°jl tal√°lhat√≥")
        auto_audio_player_simple(test_audio_path, "Teszt zene")
    else:
        st.error("‚ùå Teszt audio f√°jl nem tal√°lhat√≥")
        st.info("K√©rj√ºk, helyezz el egy audio f√°jlt az audio_files mapp√°ban") 