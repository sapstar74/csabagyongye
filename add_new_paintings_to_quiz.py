#!/usr/bin/env python3
"""
√öj festm√©nyek hozz√°ad√°sa a quiz alkalmaz√°shoz
Automatikusan azonos√≠tja az √∫j k√©peket √©s l√©trehozza a k√©rd√©seket
"""

import os
import re
from pathlib import Path

def extract_painting_info(filename):
    """K√©pf√°jl nev√©b≈ël kinyeri a festm√©ny √©s fest≈ë inform√°ci√≥it"""
    # Elt√°vol√≠tjuk a .jpg kiterjeszt√©st
    name = filename.replace('.jpg', '')
    
    # K√ºl√∂nb√∂z≈ë form√°tumok kezel√©se
    patterns = [
        # "festm√©ny-neve---fest≈ë-neve-√©v.jpg" form√°tum
        r'^(.+?)---(.+?)-(\d{4})$',
        # "festm√©ny-neve---fest≈ë-neve.jpg" form√°tum (√©v n√©lk√ºl)
        r'^(.+?)---(.+?)$',
        # "festm√©ny-neve-fest≈ë-neve-√©v.jpg" form√°tum
        r'^(.+?)-(.+?)-(\d{4})$',
        # "festm√©ny-neve-fest≈ë-neve.jpg" form√°tum
        r'^(.+?)-(.+?)$'
    ]
    
    for pattern in patterns:
        match = re.match(pattern, name)
        if match:
            if len(match.groups()) == 3:
                painting_name, artist_name, year = match.groups()
                return painting_name.replace('-', ' ').title(), artist_name.replace('-', ' ').title(), year
            else:
                painting_name, artist_name = match.groups()
                return painting_name.replace('-', ' ').title(), artist_name.replace('-', ' ').title(), None
    
    # Ha nem tal√°lunk mint√°t, visszaadjuk a f√°jlnevet
    return name.replace('-', ' ').title(), "Ismeretlen fest≈ë", None

def get_existing_quiz_images():
    """Lek√©ri a jelenlegi quiz-ben haszn√°lt k√©peket"""
    quiz_file = "topics/festmenyek.py"
    existing_images = set()
    
    if os.path.exists(quiz_file):
        with open(quiz_file, 'r', encoding='utf-8') as f:
            content = f.read()
            # Keres√ºnk image_file sorokat
            matches = re.findall(r"'image_file':\s*'([^']+)'", content)
            existing_images.update(matches)
    
    return existing_images

def get_all_image_files():
    """Lek√©ri az √∂sszes k√©pf√°jlt a festm√©ny_k√©pek mapp√°b√≥l"""
    image_dir = Path("festm√©ny_k√©pek")
    image_files = []
    
    if image_dir.exists():
        for file in image_dir.glob("*.jpg"):
            image_files.append(file.name)
    
    return image_files

def create_quiz_question(painting_name, artist_name, year, filename):
    """L√©trehoz egy quiz k√©rd√©st egy festm√©nyhez"""
    
    # T√©ves v√°laszok gener√°l√°sa (ezeket k√©s≈ëbb manu√°lisan kell finom√≠tani)
    false_artists = [
        "Claude Monet", "Vincent van Gogh", "Pablo Picasso", "Leonardo da Vinci",
        "Rembrandt", "Johannes Vermeer", "Sandro Botticelli", "Edvard Munch",
        "Salvador Dal√≠", "Gustav Klimt", "Pierre-Auguste Renoir", "√âdouard Manet",
        "Raphael", "Michelangelo", "Caravaggio", "Titian", "El Greco",
        "Francisco Goya", "Paul C√©zanne", "Henri Matisse", "Wassily Kandinsky",
        "Frida Kahlo", "Andy Warhol", "Jackson Pollock", "Ren√© Magritte"
    ]
    
    # Elt√°vol√≠tjuk a helyes v√°laszt a t√©ves v√°laszokb√≥l
    false_artists = [a for a in false_artists if a != artist_name]
    
    # 3 v√©letlenszer≈± t√©ves v√°laszt v√°lasztunk
    import random
    selected_false = random.sample(false_artists, 3)
    
    # V√°laszlehet≈ës√©gek √∂ssze√°ll√≠t√°sa (helyes v√°lasz + 3 t√©ves)
    options = selected_false + [artist_name]
    random.shuffle(options)
    
    # Helyes v√°lasz index√©nek meghat√°roz√°sa
    correct_index = options.index(artist_name)
    
    # Magyar√°zat √∂ssze√°ll√≠t√°sa
    explanation = f"{painting_name}"
    if year:
        explanation += f" - {artist_name} ({year})"
    else:
        explanation += f" - {artist_name}"
    
    return {
        'question': 'N√©zd meg ezt a festm√©nyt √©s v√°laszd ki a fest≈ë nev√©t:',
        'options': options,
        'correct': correct_index,
        'explanation': explanation,
        'image_file': filename,
        'topic': 'festm√©nyek'
    }

def main():
    """F≈ë f√ºggv√©ny az √∫j festm√©nyek hozz√°ad√°s√°hoz"""
    
    print("üé® √öj festm√©nyek keres√©se...")
    
    # Megl√©v≈ë k√©pek lek√©r√©se
    existing_images = get_existing_quiz_images()
    print(f"Jelenlegi quiz k√©pek: {len(existing_images)}")
    
    # √ñsszes k√©pf√°jl lek√©r√©se
    all_images = get_all_image_files()
    print(f"√ñsszes k√©pf√°jl: {len(all_images)}")
    
    # √öj k√©pek azonos√≠t√°sa
    new_images = [img for img in all_images if img not in existing_images]
    print(f"√öj k√©pek: {len(new_images)}")
    
    if not new_images:
        print("‚úÖ Nincs √∫j k√©p hozz√°adand√≥!")
        return
    
    print("\nüÜï √öj k√©pek:")
    new_questions = []
    
    for filename in new_images:
        painting_name, artist_name, year = extract_painting_info(filename)
        print(f"  - {filename}")
        print(f"    Festm√©ny: {painting_name}")
        print(f"    Fest≈ë: {artist_name}")
        if year:
            print(f"    √âv: {year}")
        print()
        
        # Quiz k√©rd√©s l√©trehoz√°sa
        question = create_quiz_question(painting_name, artist_name, year, filename)
        new_questions.append(question)
    
    # √öj k√©rd√©sek hozz√°ad√°sa a megl√©v≈ë f√°jlhoz
    if new_questions:
        quiz_file = "topics/festmenyek.py"
        
        if os.path.exists(quiz_file):
            with open(quiz_file, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # Megkeress√ºk a lista v√©g√©t
            # Keres√ºnk az utols√≥ k√©rd√©s ut√°n
            last_question_pattern = r'(\s+},\s*)\n\s*\]\s*$'
            match = re.search(last_question_pattern, content, re.MULTILINE | re.DOTALL)
            
            if match:
                # √öj k√©rd√©sek besz√∫r√°sa
                new_content = content[:match.start(1)]
                
                for question in new_questions:
                    new_content += f"""    {{
        'question': '{question['question']}',
        'options': {question['options']},
        'correct': {question['correct']},
        'explanation': '{question['explanation']}',
        'image_file': '{question['image_file']}',
        'topic': '{question['topic']}'
    }},
"""
                
                new_content += content[match.start(1):]
                
                # F√°jl ment√©se
                with open(quiz_file, 'w', encoding='utf-8') as f:
                    f.write(new_content)
                
                print(f"‚úÖ {len(new_questions)} √∫j k√©rd√©s hozz√°adva a quiz-hez!")
                print(f"üìÅ F√°jl friss√≠tve: {quiz_file}")
            else:
                print("‚ùå Nem siker√ºlt megtal√°lni a lista v√©g√©t a f√°jlban!")
        else:
            print("‚ùå A quiz f√°jl nem tal√°lhat√≥!")
    
    # √ñsszes√≠t√©s
    print(f"\nüìä √ñsszes√≠t√©s:")
    print(f"  - Eredeti k√©rd√©sek: {len(existing_images)}")
    print(f"  - √öj k√©rd√©sek: {len(new_questions)}")
    print(f"  - √ñsszes k√©rd√©s: {len(existing_images) + len(new_questions)}")

if __name__ == "__main__":
    main() 